/*!
 * Proton v3.3.0
 * https://github.com/a-jie/Proton
 *
 * Copyright 2013-2018, A-JIE
 * Licensed under the MIT license
 * http://www.opensource.org/licenses/mit-license
 *
 */
!function (t, e) {
	"object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.Proton = e()
}
(this, function () {
	"use strict";
	var e = 3.1415926,
	h = {
		PI: e,
		PIx2: 2 * e,
		PI_2: e / 2,
		PI_180: e / 180,
		N180_PI: 180 / e,
		randomAToB: function (t, e, i) {
			return i ? Math.floor(Math.random() * (e - t)) + t : t + Math.random() * (e - t)
		},
		randomFloating: function (t, e, i) {
			return this.randomAToB(t - e, t + e, i)
		},
		randomZone: function (t) {},
		degreeTransform: function (t) {
			return t * e / 180
		},
		toColor16: function (t) {
			return "#" + t.toString(16)
		},
		randomColor: function () {
			return "#" + ("00000" + (16777216 * Math.random() << 0).toString(16)).slice(-6)
		}
	},
	r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
		return typeof t
	}
	 : function (t) {
		return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
	},
	o = function (t, e) {
		if (!(t instanceof e))
			throw new TypeError("Cannot call a class as a function")
	},
	l = function () {
		function r(t, e) {
			for (var i = 0; i < e.length; i++) {
				var r = e[i];
				r.enumerable = r.enumerable || !1,
				r.configurable = !0,
				"value" in r && (r.writable = !0),
				Object.defineProperty(t, r.key, r)
			}
		}
		return function (t, e, i) {
			return e && r(t.prototype, e),
			i && r(t, i),
			t
		}
	}
	(),
	u = function t(e, i, r) {
		null === e && (e = Function.prototype);
		var n = Object.getOwnPropertyDescriptor(e, i);
		if (void 0 === n) {
			var a = Object.getPrototypeOf(e);
			return null === a ? void 0 : t(a, i, r)
		}
		if ("value" in n)
			return n.value;
		var s = n.get;
		return void 0 !== s ? s.call(r) : void 0
	},
	c = function (t, e) {
		if ("function" != typeof e && null !== e)
			throw new TypeError("Super expression must either be null or a function, not " + typeof e);
		t.prototype = Object.create(e && e.prototype, {
				constructor: {
					value: t,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}),
		e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
	},
	f = function (t, e) {
		if (!t)
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return !e || "object" != typeof e && "function" != typeof e ? t : e
	},
	n = function () {
		function r(t, e, i) {
			o(this, r),
			this.isArray = !1,
			k.isArray(t) ? (this.isArray = !0, this.a = t) : (this.a = k.initValue(t, 1), this.b = k.initValue(e, this.a), this.center = k.initValue(i, !1))
		}
		return l(r, [{
					key: "getValue",
					value: function (t) {
						return this.isArray ? this.a[Math.floor(this.a.length * Math.random())] : this.center ? h.randomFloating(this.a, this.b, t) : h.randomAToB(this.a, this.b, t)
					}
				}
			]),
		r
	}
	(),
	d = function (t) {
		--t;
		for (var e = 1; e < 32; e <<= 1)
			t |= t >> e;
		return t + 1
	},
	y = function (t, e) {
		return [1, 0, 0, 0, 1, 0, t, e, 1]
	},
	p = function (t) {
		var e = Math.cos(t),
		i = Math.sin(t);
		return [e, -i, 0, i, e, 0, 0, 0, 1]
	},
	v = function (t, e) {
		return [t, 0, 0, 0, e, 0, 0, 0, 1]
	},
	g = function (t, e) {
		var i = t[0],
		r = t[1],
		n = t[2],
		a = t[3],
		s = t[4],
		o = t[5],
		h = t[6],
		l = t[7],
		u = t[8],
		c = e[0],
		f = e[1],
		d = e[2],
		y = e[3],
		p = e[4],
		v = e[5],
		g = e[6],
		m = e[7],
		b = e[8];
		return [i * c + r * y + n * g, i * f + r * p + n * m, i * d + r * v + n * b, a * c + s * y + o * g, a * f + s * p + o * m, a * d + s * v + o * b, h * c + l * y + u * g, h * f + l * p + u * m, h * d + l * v + u * b]
	},
	m = {
		createCanvas: function (t, e, i, r) {
			var n = document.createElement("canvas");
			return r = r || "absolute",
			n.id = t,
			n.width = e,
			n.height = i,
			n.style.opacity = 0,
			n.style.position = r,
			this.transform(n, -500, -500, 0, 0),
			n
		},
		createDiv: function (t, e, i) {
			var r = document.createElement("div");
			return r.id = t,
			r.style.position = "absolute",
			this.resize(r, e, i),
			r
		},
		resize: function (t, e, i) {
			t.style.width = e + "px",
			t.style.height = i + "px",
			t.style.marginLeft = -e / 2 + "px",
			t.style.marginTop = -i / 2 + "px"
		},
		transform: function (t, e, i, r, n) {
			var a = "translate(" + e + "px, " + i + "px) scale(" + r + ") rotate(" + n + "deg)";
			t.style.willChange = "transform",
			this.css3(t, "transform", a)
		},
		transform3d: function (t, e, i, r, n) {
			var a = "translate3d(" + e + "px, " + i + "px, 0) scale(" + r + ") rotate(" + n + "deg)";
			t.style.willChange = "transform",
			this.css3(t, "backfaceVisibility", "hidden"),
			this.css3(t, "transform", a)
		},
		css3: function (t, e, i) {
			var r = e.charAt(0).toUpperCase() + e.substr(1);
			t.style["Webkit" + r] = i,
			t.style["Moz" + r] = i,
			t.style["O" + r] = i,
			t.style["ms" + r] = i,
			t.style["" + e] = i
		}
	},
	a = {},
	b = {},
	s = function (t, e, i) {
		t.drawImage(e, i.x, i.y);
		var r = t.getImageData(i.x, i.y, i.width, i.height);
		return t.clearRect(i.x, i.y, i.width, i.height),
		r
	},
	_ = function (t, e, i) {
		var r = "string" == typeof t ? t : t.src;
		if (a[r])
			e(a[r], i);
		else {
			var n = new Image;
			n.onload = function (t) {
				a[r] = t.target,
				e(a[r], i)
			},
			n.src = r
		}
	},
	x = function (t, e, i) {
		var r = t.src;
		if (!b[r]) {
			var n = d(t.width),
			a = d(t.height),
			s = m.createCanvas("canvas_cache_0", n, a);
			s.getContext("2d").drawImage(t, 0, 0, t.width, t.height),
			b[r] = s
		}
		return e && e(b[r], i),
		b[r]
	},
	k = {
		initValue: function (t, e) {
			return t = null != t ? t : e
		},
		isArray: function (t) {
			return "[object Array]" === Object.prototype.toString.call(t)
		},
		destroyArray: function (t) {
			t && (t.length = 0)
		},
		destroyObject: function (t, e) {
			for (var i in t)
				e && -1 < e.indexOf(i) || delete t[i]
		},
		classApply: function (t, e) {
			return e ? (e = [null].concat(e), new(t.bind.apply(t, e))) : new t
		},
		setVector2DByObject: function (t, e) {
			this.hasProp(e, "x") && (t.p.x = e.x),
			this.hasProp(e, "y") && (t.p.y = e.y),
			this.hasProp(e, "vx") && (t.v.x = e.vx),
			this.hasProp(e, "vy") && (t.v.y = e.vy),
			this.hasProp(e, "ax") && (t.a.x = e.ax),
			this.hasProp(e, "ay") && (t.a.y = e.ay),
			this.hasProp(e, "p") && t.p.copy(e.p),
			this.hasProp(e, "v") && t.v.copy(e.v),
			this.hasProp(e, "a") && t.a.copy(e.a),
			this.hasProp(e, "position") && t.p.copy(e.position),
			this.hasProp(e, "velocity") && t.v.copy(e.velocity),
			this.hasProp(e, "accelerate") && t.a.copy(e.accelerate)
		},
		hasProp: function (t, e) {
			return !!t && void 0 !== t[e]
		},
		setPrototypeByObject: function (t, e, i) {
			for (var r in e)
				t.hasOwnProperty(r) && (i ? i.indexOf(r) < 0 && (t[r] = this.getSpanValue(e[r])) : t[r] = this.getSpanValue(e[r]));
			return t
		},
		setSpanValue: function (t, e, i) {
			return t instanceof n ? t : e ? i ? new n(t, e, i) : new n(t, e) : new n(t)
		},
		getSpanValue: function (t) {
			return t instanceof n ? t.getValue() : t
		},
		getImageData: function (t, e, i) {
			return s(t, e, i)
		},
		destroy: function (t, e) {
			for (var i = t.length; i--; ) {
				try {
					t[i].destroy(e)
				} catch (t) {}
				delete t[i]
			}
			t.length = 0
		}
	},
	P = {
		id: 0,
		cache: {},
		getID: function (t) {
			var e = this.getCacheID(t);
			return e || (e = "PUID_" + this.id++, this.cache[e] = t, e)
		},
		getCacheID: function (t) {
			var e = void 0;
			for (var i in this.cache) {
				if ((e = this.cache[i]) === t)
					return i;
				if ("object" === (void 0 === e ? "undefined" : r(e)) && "object" === (void 0 === t ? "undefined" : r(t)) && e.isInner && t.isInner && e.src === t.src)
					return i
			}
			return null
		},
		getTarget: function (t) {
			return this.cache[t]
		}
	},
	E = function () {
		function e(t) {
			o(this, e),
			this.total = 0,
			this.cache = {}
		}
		return l(e, [{
					key: "get",
					value: function (t, e, i) {
						var r = void 0;
						return i = i || t.__puid || P.getID(t),
						(r = this.cache[i] && 0 < this.cache[i].length ? this.cache[i].pop() : this.createOrClone(t, e)).__puid = t.__puid || i,
						r
					}
				}, {
					key: "expire",
					value: function (t) {
						return this.getCache(t.__puid).push(t)
					}
				}, {
					key: "createOrClone",
					value: function (t, e) {
						return this.total++,
						this.create ? this.create(t, e) : "function" == typeof t ? k.classApply(t, e) : t.clone()
					}
				}, {
					key: "getCount",
					value: function () {
						var t = 0;
						for (var e in this.cache)
							t += this.cache[e].length;
						return t++
					}
				}, {
					key: "destroy",
					value: function () {
						for (var t in this.cache)
							this.cache[t].length = 0, delete this.cache[t]
					}
				}, {
					key: "getCache",
					value: function (t) {
						return t = t || "default",
						this.cache[t] || (this.cache[t] = []),
						this.cache[t]
					}
				}
			]),
		e
	}
	(),
	T = function () {
		function e(t) {
			o(this, e),
			this.proton = t,
			this.container = null,
			this.type = 1,
			this.emitterIndex = 0,
			this.rendererIndex = 0
		}
		return l(e, [{
					key: "update",
					value: function (t, e) {
						this.add(t, e);
						var i = this.getEmitter(),
						r = this.getRenderer(),
						n = "";
						switch (this.type) {
						case 2:
							n += "emitter:" + this.proton.emitters.length + "<br>",
							i && (n += "em speed:" + i.emitSpeed + "<br>"),
							i && (n += "pos:" + this.getEmitterPos(i));
							break;
						case 3:
							i && (n += "initializes:" + i.initializes.length + "<br>"),
							i && (n += '<span style="display:inline-block;">' + this.concatArr(i.initializes) + "</span><br>"),
							i && (n += "behaviours:" + i.behaviours.length + "<br>"),
							i && (n += '<span style="display:inline-block;">' + this.concatArr(i.behaviours) + "</span><br>");
							break;
						case 4:
							r && (n += r.name + "<br>"),
							r && (n += "body:" + this.getCreatedNumber(r) + "<br>");
							break;
						default:
							n += "particles:" + this.proton.getCount() + "<br>",
							n += "pool:" + this.proton.pool.getCount() + "<br>",
							n += "total:" + this.proton.pool.total
						}
						this.container.innerHTML = n
					}
				}, {
					key: "add",
					value: function (t, e) {
						var i = this;
						if (!this.container) {
							this.type = 1,
							this.container = document.createElement("div"),
							this.container.style.cssText = ["position:absolute;bottom:0px;left:0;cursor:pointer;", "opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;", "width:120px;height:50px;background-color:#002;color:#0ff;"].join(""),
							this.container.addEventListener("click", function (t) {
								i.type++,
								4 < i.type && (i.type = 1)
							}, !1);
							var r = void 0,
							n = void 0;
							switch (t) {
							case 2:
								r = "#201",
								n = "#f08";
								break;
							case 3:
								r = "#020",
								n = "#0f0";
								break;
							default:
								r = "#002",
								n = "#0ff"
							}
							this.container.style["background-color"] = r,
							this.container.style.color = n
						}
						this.container.parentNode || (e = e || this.body || document.body).appendChild(this.container)
					}
				}, {
					key: "getEmitter",
					value: function () {
						return this.proton.emitters[this.emitterIndex]
					}
				}, {
					key: "getRenderer",
					value: function () {
						return this.proton.renderers[this.rendererIndex]
					}
				}, {
					key: "concatArr",
					value: function (t) {
						var e = "";
						if (!t || !t.length)
							return e;
						for (var i = 0; i < t.length; i++)
							e += (t[i].name || "").substr(0, 1) + ".";
						return e
					}
				}, {
					key: "getCreatedNumber",
					value: function (t) {
						return t.pool.total || t.cpool && t.cpool.total || 0
					}
				}, {
					key: "getEmitterPos",
					value: function (t) {
						return Math.round(t.p.x) + "," + Math.round(t.p.y)
					}
				}
			]),
		e
	}
	(),
	t = function () {
		function e() {
			o(this, e),
			this._listeners = null
		}
		return l(e, [{
					key: "addEventListener",
					value: function (t, e) {
						return this._listeners ? this.removeEventListener(t, e) : this._listeners = {},
						this._listeners[t] || (this._listeners[t] = []),
						this._listeners[t].push(e),
						e
					}
				}, {
					key: "removeEventListener",
					value: function (t, e) {
						if (this._listeners && this._listeners[t])
							for (var i = this._listeners[t], r = i.length, n = 0; n < r; n++)
								if (i[n] === e) {
									1 === r ? delete this._listeners[t] : i.splice(n, 1);
									break
								}
					}
				}, {
					key: "removeAllEventListeners",
					value: function (t) {
						t ? this._listeners && delete this._listeners[t] : this._listeners = null
					}
				}, {
					key: "dispatchEvent",
					value: function (t, e) {
						var i = !1,
						r = this._listeners;
						if (t && r) {
							var n = r[t];
							if (!n)
								return i;
							for (var a = void 0, s = n.length; s--; )
								a = n[s], i = i || a(e)
						}
						return !!i
					}
				}, {
					key: "hasEventListener",
					value: function (t) {
						var e = this._listeners;
						return !(!e || !e[t])
					}
				}
			], [{
					key: "bind",
					value: function (t) {
						t.prototype.dispatchEvent = e.prototype.dispatchEvent,
						t.prototype.hasEventListener = e.prototype.hasEventListener,
						t.prototype.addEventListener = e.prototype.addEventListener,
						t.prototype.removeEventListener = e.prototype.removeEventListener,
						t.prototype.removeAllEventListeners = e.prototype.removeAllEventListeners
					}
				}
			]),
		e
	}
	(),
	A = function () {
		function e(t) {
			o(this, e),
			this.type = t
		}
		return l(e, [{
					key: "calculate",
					value: function (t, e, i) {
						this.eulerIntegrate(t, e, i)
					}
				}, {
					key: "eulerIntegrate",
					value: function (t, e, i) {
						t.sleep || (t.old.p.copy(t.p), t.old.v.copy(t.v), t.a.multiplyScalar(1 / t.mass), t.v.add(t.a.multiplyScalar(e)), t.p.add(t.old.v.multiplyScalar(e)), i && t.v.multiplyScalar(i), t.a.clear())
					}
				}
			]),
		e
	}
	(),
	R = function () {
		function i(t) {
			o(this, i),
			this.emitters = [],
			this.renderers = [],
			this.time = 0,
			this.oldTime = 0,
			this.elapsed = 0,
			this.stats = new T(this),
			this.pool = new E(80),
			this.integrationType = k.initValue(t, i.EULER),
			this.integrator = new A(this.integrationType)
		}
		return l(i, [{
					key: "addRenderer",
					value: function (t) {
						t.init(this),
						this.renderers.push(t)
					}
				}, {
					key: "removeRenderer",
					value: function (t) {
						var e = this.renderers.indexOf(t);
						this.renderers.splice(e, 1),
						t.remove(this)
					}
				}, {
					key: "addEmitter",
					value: function (t) {
						this.emitters.push(t),
						(t.parent = this).dispatchEvent(i.EMITTER_ADDED, t)
					}
				}, {
					key: "removeEmitter",
					value: function (t) {
						var e = this.emitters.indexOf(t);
						this.emitters.splice(e, 1),
						t.parent = null,
						this.dispatchEvent(i.EMITTER_REMOVED, t)
					}
				}, {
					key: "update",
					value: function () {
						if (this.dispatchEvent(i.PROTON_UPDATE), i.USE_CLOCK) {
							this.oldTime || (this.oldTime = (new Date).getTime());
							var t = (new Date).getTime();
							this.elapsed = (t - this.oldTime) / 1e3,
							i.amendChangeTabsBug && this.amendChangeTabsBug(),
							this.oldTime = t
						} else
							this.elapsed = .0167;
						0 < this.elapsed && this.emittersUpdate(this.elapsed),
						this.dispatchEvent(i.PROTON_UPDATE_AFTER)
					}
				}, {
					key: "emittersUpdate",
					value: function (t) {
						for (var e = this.emitters.length; e--; )
							this.emitters[e].update(t)
					}
				}, {
					key: "amendChangeTabsBug",
					value: function () {
						.5 < this.elapsed && (this.oldTime = (new Date).getTime(), this.elapsed = 0)
					}
				}, {
					key: "getCount",
					value: function () {
						for (var t = 0, e = this.emitters.length; e--; )
							t += this.emitters[e].particles.length;
						return t
					}
				}, {
					key: "getAllParticles",
					value: function () {
						for (var t = [], e = this.emitters.length; e--; )
							t = t.concat(this.emitters[e].particles);
						return t
					}
				}, {
					key: "destroy",
					value: function () {
						k.destroy(this.renderers, this.getAllParticles()),
						k.destroy(this.emitters),
						this.time = 0,
						this.oldTime = 0,
						this.pool.destroy()
					}
				}
			]),
		i
	}
	();
	R.USE_CLOCK = !1,
	R.MEASURE = 100,
	R.EULER = "euler",
	R.RK2 = "runge-kutta2",
	R.PARTICLE_CREATED = "PARTICLE_CREATED",
	R.PARTICLE_UPDATE = "PARTICLE_UPDATE",
	R.PARTICLE_SLEEP = "PARTICLE_SLEEP",
	R.PARTICLE_DEAD = "PARTICLE_DEAD",
	R.PROTON_UPDATE = "PROTON_UPDATE",
	R.PROTON_UPDATE_AFTER = "PROTON_UPDATE_AFTER",
	R.EMITTER_ADDED = "EMITTER_ADDED",
	R.EMITTER_REMOVED = "EMITTER_REMOVED",
	R.amendChangeTabsBug = !0,
	t.bind(R);
	var w = {
		easeLinear: function (t) {
			return t
		},
		easeInQuad: function (t) {
			return Math.pow(t, 2)
		},
		easeOutQuad: function (t) {
			return  - (Math.pow(t - 1, 2) - 1)
		},
		easeInOutQuad: function (t) {
			return (t /= .5) < 1 ? .5 * Math.pow(t, 2) :  - .5 * ((t -= 2) * t - 2)
		},
		easeInCubic: function (t) {
			return Math.pow(t, 3)
		},
		easeOutCubic: function (t) {
			return Math.pow(t - 1, 3) + 1
		},
		easeInOutCubic: function (t) {
			return (t /= .5) < 1 ? .5 * Math.pow(t, 3) : .5 * (Math.pow(t - 2, 3) + 2)
		},
		easeInQuart: function (t) {
			return Math.pow(t, 4)
		},
		easeOutQuart: function (t) {
			return  - (Math.pow(t - 1, 4) - 1)
		},
		easeInOutQuart: function (t) {
			return (t /= .5) < 1 ? .5 * Math.pow(t, 4) :  - .5 * ((t -= 2) * Math.pow(t, 3) - 2)
		},
		easeInSine: function (t) {
			return 1 - Math.cos(t * h.PI_2)
		},
		easeOutSine: function (t) {
			return Math.sin(t * h.PI_2)
		},
		easeInOutSine: function (t) {
			return  - .5 * (Math.cos(h.PI * t) - 1)
		},
		easeInExpo: function (t) {
			return 0 === t ? 0 : Math.pow(2, 10 * (t - 1))
		},
		easeOutExpo: function (t) {
			return 1 === t ? 1 : 1 - Math.pow(2, -10 * t)
		},
		easeInOutExpo: function (t) {
			return 0 === t ? 0 : 1 === t ? 1 : (t /= .5) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * --t))
		},
		easeInCirc: function (t) {
			return  - (Math.sqrt(1 - t * t) - 1)
		},
		easeOutCirc: function (t) {
			return Math.sqrt(1 - Math.pow(t - 1, 2))
		},
		easeInOutCirc: function (t) {
			return (t /= .5) < 1 ?  - .5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
		},
		easeInBack: function (t) {
			return t * t * (2.70158 * t - 1.70158)
		},
		easeOutBack: function (t) {
			return (t -= 1) * t * (2.70158 * t + 1.70158) + 1
		},
		easeInOutBack: function (t) {
			var e = 1.70158;
			return (t /= .5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2)
		},
		getEasing: function (t) {
			return "function" == typeof t ? t : this[t] || this.easeLinear
		}
	},
	O = function () {
		function i(t, e) {
			o(this, i),
			this.x = t || 0,
			this.y = e || 0
		}
		return l(i, [{
					key: "set",
					value: function (t, e) {
						return this.x = t,
						this.y = e,
						this
					}
				}, {
					key: "setX",
					value: function (t) {
						return this.x = t,
						this
					}
				}, {
					key: "setY",
					value: function (t) {
						return this.y = t,
						this
					}
				}, {
					key: "getGradient",
					value: function () {
						return 0 !== this.x ? Math.atan2(this.y, this.x) : 0 < this.y ? h.PI_2 : this.y < 0 ? -h.PI_2 : void 0
					}
				}, {
					key: "copy",
					value: function (t) {
						return this.x = t.x,
						this.y = t.y,
						this
					}
				}, {
					key: "add",
					value: function (t, e) {
						return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x, this.y += t.y, this)
					}
				}, {
					key: "addXY",
					value: function (t, e) {
						return this.x += t,
						this.y += e,
						this
					}
				}, {
					key: "addVectors",
					value: function (t, e) {
						return this.x = t.x + e.x,
						this.y = t.y + e.y,
						this
					}
				}, {
					key: "sub",
					value: function (t, e) {
						return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x, this.y -= t.y, this)
					}
				}, {
					key: "subVectors",
					value: function (t, e) {
						return this.x = t.x - e.x,
						this.y = t.y - e.y,
						this
					}
				}, {
					key: "divideScalar",
					value: function (t) {
						return 0 !== t ? (this.x /= t, this.y /= t) : this.set(0, 0),
						this
					}
				}, {
					key: "multiplyScalar",
					value: function (t) {
						return this.x *= t,
						this.y *= t,
						this
					}
				}, {
					key: "negate",
					value: function () {
						return this.multiplyScalar(-1)
					}
				}, {
					key: "dot",
					value: function (t) {
						return this.x * t.x + this.y * t.y
					}
				}, {
					key: "lengthSq",
					value: function () {
						return this.x * this.x + this.y * this.y
					}
				}, {
					key: "length",
					value: function () {
						return Math.sqrt(this.x * this.x + this.y * this.y)
					}
				}, {
					key: "normalize",
					value: function () {
						return this.divideScalar(this.length())
					}
				}, {
					key: "distanceTo",
					value: function (t) {
						return Math.sqrt(this.distanceToSquared(t))
					}
				}, {
					key: "rotate",
					value: function (t) {
						var e = this.x,
						i = this.y;
						return this.x = e * Math.cos(t) + i * Math.sin(t),
						this.y = -e * Math.sin(t) + i * Math.cos(t),
						this
					}
				}, {
					key: "distanceToSquared",
					value: function (t) {
						var e = this.x - t.x,
						i = this.y - t.y;
						return e * e + i * i
					}
				}, {
					key: "lerp",
					value: function (t, e) {
						return this.x += (t.x - this.x) * e,
						this.y += (t.y - this.y) * e,
						this
					}
				}, {
					key: "equals",
					value: function (t) {
						return t.x === this.x && t.y === this.y
					}
				}, {
					key: "clear",
					value: function () {
						return this.x = 0,
						this.y = 0,
						this
					}
				}, {
					key: "clone",
					value: function () {
						return new i(this.x, this.y)
					}
				}
			]),
		i
	}
	(),
	C = function () {
		function e(t) {
			o(this, e),
			this.id = "particle_" + e.ID++,
			this.reset("init"),
			t && k.setPrototypeByObject(this, t)
		}
		return l(e, [{
					key: "getDirection",
					value: function () {
						return Math.atan2(this.v.x, -this.v.y) * h.N180_PI
					}
				}, {
					key: "reset",
					value: function (t) {
						return this.life = 1 / 0,
						this.age = 0,
						this.energy = 1,
						this.dead = !1,
						this.sleep = !1,
						this.body = null,
						this.sprite = null,
						this.parent = null,
						this.mass = 1,
						this.radius = 10,
						this.alpha = 1,
						this.scale = 1,
						this.rotation = 0,
						this.color = null,
						this.easing = w.easeLinear,
						"init" === t ? (this.transform = {}, this.p = new O, this.v = new O, this.a = new O, this.old = {
								p: new O,
								v: new O,
								a: new O
							}, this.behaviours = []) : (k.destroyObject(this.transform, "rgb"), this.p.set(0, 0), this.v.set(0, 0), this.a.set(0, 0), this.old.p.set(0, 0), this.old.v.set(0, 0), this.old.a.set(0, 0), this.removeAllBehaviours()),
						this.transform.rgb ? (this.transform.rgb.r = 255, this.transform.rgb.g = 255, this.transform.rgb.b = 255) : this.transform.rgb = {
							r: 255,
							g: 255,
							b: 255
						},
						this
					}
				}, {
					key: "update",
					value: function (t, e) {
						if (this.sleep || (this.age += t, this.applyBehaviours(t, e)), this.age < this.life) {
							var i = this.easing(this.age / this.life);
							this.energy = Math.max(1 - i, 0)
						} else
							this.destroy()
					}
				}, {
					key: "applyBehaviours",
					value: function (t, e) {
						var i = this.behaviours.length,
						r = void 0;
						for (r = 0; r < i; r++)
							this.behaviours[r] && this.behaviours[r].applyBehaviour(this, t, e)
					}
				}, {
					key: "addBehaviour",
					value: function (t) {
						this.behaviours.push(t),
						t.hasOwnProperty("parents") && t.parents.push(this),
						t.initialize(this)
					}
				}, {
					key: "addBehaviours",
					value: function (t) {
						var e = t.length,
						i = void 0;
						for (i = 0; i < e; i++)
							this.addBehaviour(t[i])
					}
				}, {
					key: "removeBehaviour",
					value: function (t) {
						var e = this.behaviours.indexOf(t);
						-1 < e && (this.behaviours.splice(e, 1).parents = null)
					}
				}, {
					key: "removeAllBehaviours",
					value: function () {
						k.destroyArray(this.behaviours)
					}
				}, {
					key: "destroy",
					value: function () {
						this.removeAllBehaviours(),
						this.energy = 0,
						this.dead = !0,
						this.parent = null
					}
				}
			]),
		e
	}
	();
	C.ID = 0;
	var S = {
		hexToRGB: function (t) {
			var e = "#" === t.charAt(0) ? t.substring(1, 7) : t;
			return {
				r: parseInt(e.substring(0, 2), 16),
				g: parseInt(e.substring(2, 4), 16),
				b: parseInt(e.substring(4, 6), 16)
			}
		},
		rgbToHex: function (t) {
			return "rgb(" + t.r + ", " + t.g + ", " + t.b + ")"
		},
		getHex16FromParticle: function (t) {
			return 65536 * Number(t.transform.rgb.r) + 256 * Number(t.transform.rgb.g) + Number(t.transform.rgb.b)
		}
	},
	i = function () {
		function i(t, e) {
			o(this, i),
			this.r = Math.abs(t) || 0,
			this.tha = e || 0
		}
		return l(i, [{
					key: "set",
					value: function (t, e) {
						return this.r = t,
						this.tha = e,
						this
					}
				}, {
					key: "setR",
					value: function (t) {
						return this.r = t,
						this
					}
				}, {
					key: "setTha",
					value: function (t) {
						return this.tha = t,
						this
					}
				}, {
					key: "copy",
					value: function (t) {
						return this.r = t.r,
						this.tha = t.tha,
						this
					}
				}, {
					key: "toVector",
					value: function () {
						return new O(this.getX(), this.getY())
					}
				}, {
					key: "getX",
					value: function () {
						return this.r * Math.sin(this.tha)
					}
				}, {
					key: "getY",
					value: function () {
						return -this.r * Math.cos(this.tha)
					}
				}, {
					key: "normalize",
					value: function () {
						return this.r = 1,
						this
					}
				}, {
					key: "equals",
					value: function (t) {
						return t.r === this.r && t.tha === this.tha
					}
				}, {
					key: "clear",
					value: function () {
						return this.r = 0,
						this.tha = 0,
						this
					}
				}, {
					key: "clone",
					value: function () {
						return new i(this.r, this.tha)
					}
				}
			]),
		i
	}
	(),
	I = {
		create: function (t) {
			var e = new Float32Array(9);
			return t && this.set(t, e),
			e
		},
		set: function (t, e) {
			for (var i = 0; i < 9; i++)
				e[i] = t[i];
			return e
		},
		multiply: function (t, e, i) {
			var r = t[0],
			n = t[1],
			a = t[2],
			s = t[3],
			o = t[4],
			h = t[6],
			l = t[7],
			u = e[0],
			c = e[1],
			f = e[2],
			d = e[3],
			y = e[4],
			p = e[6],
			v = e[7];
			return i[0] = u * r + c * s,
			i[1] = u * n + c * o,
			i[2] = a * f,
			i[3] = d * r + y * s,
			i[4] = d * n + y * o,
			i[6] = p * r + v * s + h,
			i[7] = p * n + v * o + l,
			i
		},
		inverse: function (t, e) {
			var i,
			r = t[0],
			n = t[1],
			a = t[3],
			s = t[4],
			o = t[6],
			h = t[7],
			l = s,
			u = -a,
			c = h * a - s * o;
			return i = 1 / (r * l + n * u),
			e[0] = l * i,
			e[1] = -n * i,
			e[3] = u * i,
			e[4] = r * i,
			e[6] = c * i,
			e[7] = (-h * r + n * o) * i,
			e
		},
		multiplyVec2: function (t, e, i) {
			var r = e[0],
			n = e[1];
			return i[0] = r * t[0] + n * t[3] + t[6],
			i[1] = r * t[1] + n * t[4] + t[7],
			i
		}
	},
	D = function (t) {
		function i(t) {
			o(this, i);
			var e = f(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this));
			return e._arr = k.isArray(t) ? t : [t],
			e
		}
		return c(i, n),
		l(i, [{
					key: "getValue",
					value: function () {
						var t = this._arr[Math.floor(this._arr.length * Math.random())];
						return "random" === t || "Random" === t ? h.randomColor() : t
					}
				}
			], [{
					key: "createArraySpan",
					value: function (t) {
						return t ? t instanceof i ? t : new i(t) : null
					}
				}
			]),
		i
	}
	(),
	B = function () {
		function n(t, e, i, r) {
			o(this, n),
			this.x = t,
			this.y = e,
			this.width = i,
			this.height = r,
			this.bottom = this.y + this.height,
			this.right = this.x + this.width
		}
		return l(n, [{
					key: "contains",
					value: function (t, e) {
						return t <= this.right && t >= this.x && e <= this.bottom && e >= this.y
					}
				}
			]),
		n
	}
	(),
	V = function () {
		function i(t, e) {
			o(this, i),
			this.numPan = k.setSpanValue(k.initValue(t, 1)),
			this.timePan = k.setSpanValue(k.initValue(e, 1)),
			this.startTime = 0,
			this.nextTime = 0,
			this.init()
		}
		return l(i, [{
					key: "init",
					value: function () {
						this.startTime = 0,
						this.nextTime = this.timePan.getValue()
					}
				}, {
					key: "getValue",
					value: function (t) {
						return this.startTime += t,
						this.startTime >= this.nextTime ? (this.startTime = 0, this.nextTime = this.timePan.getValue(), 1 === this.numPan.b ? .5 < this.numPan.getValue(!1) ? 1 : 0 : this.numPan.getValue(!0)) : 0
					}
				}
			]),
		i
	}
	(),
	M = function () {
		function t() {
			o(this, t)
		}
		return l(t, [{
					key: "reset",
					value: function () {}
				}, {
					key: "init",
					value: function (t, e) {
						e ? this.initialize(e) : this.initialize(t)
					}
				}, {
					key: "initialize",
					value: function (t) {}
				}
			]),
		t
	}
	(),
	L = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
			return r.lifePan = k.setSpanValue(t, e, i),
			r.name = "Life",
			r
		}
		return c(n, M),
		l(n, [{
					key: "initialize",
					value: function (t) {
						this.lifePan.a === 1 / 0 ? t.life = 1 / 0 : t.life = this.lifePan.getValue()
					}
				}
			]),
		n
	}
	(),
	U = function () {
		function t() {
			o(this, t),
			this.vector = new O(0, 0),
			this.random = 0,
			this.crossType = "dead",
			this.alert = !0
		}
		return l(t, [{
					key: "getPosition",
					value: function () {}
				}, {
					key: "crossing",
					value: function (t) {}
				}
			]),
		t
	}
	(),
	F = function (t) {
		function r(t, e) {
			o(this, r);
			var i = f(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this));
			return i.x = t,
			i.y = e,
			i
		}
		return c(r, U),
		l(r, [{
					key: "getPosition",
					value: function () {
						return this.vector.x = this.x,
						this.vector.y = this.y,
						this.vector
					}
				}, {
					key: "crossing",
					value: function (t) {
						this.alert && (alert("Sorry PointZone does not support crossing method"), this.alert = !1)
					}
				}
			]),
		r
	}
	(),
	z = function (t) {
		function i(t) {
			o(this, i);
			var e = f(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this));
			return e.zone = k.initValue(t, new F),
			e.name = "Position",
			e
		}
		return c(i, M),
		l(i, [{
					key: "reset",
					value: function (t) {
						this.zone = k.initValue(t, new F)
					}
				}, {
					key: "initialize",
					value: function (t) {
						this.zone.getPosition(),
						t.p.x = this.zone.vector.x,
						t.p.y = this.zone.vector.y
					}
				}
			]),
		i
	}
	(),
	j = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
			return r.rPan = k.setSpanValue(t),
			r.thaPan = k.setSpanValue(e),
			r.type = k.initValue(i, "vector"),
			r.name = "Velocity",
			r
		}
		return c(n, M),
		l(n, [{
					key: "reset",
					value: function (t, e, i) {
						this.rPan = k.setSpanValue(t),
						this.thaPan = k.setSpanValue(e),
						this.type = k.initValue(i, "vector")
					}
				}, {
					key: "normalizeVelocity",
					value: function (t) {
						return t * R.MEASURE
					}
				}, {
					key: "initialize",
					value: function (t) {
						if ("p" === this.type || "P" === this.type || "polar" === this.type) {
							var e = new i(this.normalizeVelocity(this.rPan.getValue()), this.thaPan.getValue() * h.PI_180);
							t.v.x = e.getX(),
							t.v.y = e.getY()
						} else
							t.v.x = this.normalizeVelocity(this.rPan.getValue()), t.v.y = this.normalizeVelocity(this.thaPan.getValue())
					}
				}
			]),
		n
	}
	(),
	H = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
			return r.massPan = k.setSpanValue(t, e, i),
			r.name = "Mass",
			r
		}
		return c(n, M),
		l(n, [{
					key: "initialize",
					value: function (t) {
						t.mass = this.massPan.getValue()
					}
				}
			]),
		n
	}
	(),
	N = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
			return r.radius = k.setSpanValue(t, e, i),
			r.name = "Radius",
			r
		}
		return c(n, M),
		l(n, [{
					key: "reset",
					value: function (t, e, i) {
						this.radius = k.setSpanValue(t, e, i)
					}
				}, {
					key: "initialize",
					value: function (t) {
						t.radius = this.radius.getValue(),
						t.transform.oldRadius = t.radius
					}
				}
			]),
		n
	}
	(),
	q = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
			return r.image = r.setSpanValue(t),
			r.w = k.initValue(e, 20),
			r.h = k.initValue(i, r.w),
			r.name = "Body",
			r
		}
		return c(n, M),
		l(n, [{
					key: "initialize",
					value: function (t) {
						var e = this.image.getValue();
						t.body = "string" == typeof e ? {
							width: this.w,
							height: this.h,
							src: e,
							isInner: !0,
							inner: !0
						}
						 : e
					}
				}, {
					key: "setSpanValue",
					value: function (t) {
						return t instanceof D ? t : new D(t)
					}
				}
			]),
		n
	}
	(),
	G = function () {
		function i(t, e) {
			o(this, i),
			this.life = k.initValue(t, 1 / 0),
			this.easing = w.getEasing(e),
			this.age = 0,
			this.energy = 1,
			this.dead = !1,
			this.parents = [],
			this.id = "Behaviour_" + i.id++,
			this.name = "Behaviour"
		}
		return l(i, [{
					key: "reset",
					value: function (t, e) {
						this.life = k.initValue(t, 1 / 0),
						this.easing = w.getEasing(e)
					}
				}, {
					key: "normalizeForce",
					value: function (t) {
						return t.multiplyScalar(R.MEASURE)
					}
				}, {
					key: "normalizeValue",
					value: function (t) {
						return t * R.MEASURE
					}
				}, {
					key: "initialize",
					value: function (t) {}
				}, {
					key: "calculate",
					value: function (t, e, i) {
						if (this.age += e, this.age >= this.life || this.dead)
							this.energy = 0, this.dead = !0, this.destroy();
						else {
							var r = this.easing(t.age / t.life);
							this.energy = Math.max(1 - r, 0)
						}
					}
				}, {
					key: "destroy",
					value: function () {
						for (var t = this.parents.length; t--; )
							this.parents[t].removeBehaviour(this);
						this.parents.length = 0
					}
				}
			]),
		i
	}
	();
	G.id = 0;
	var X = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i, r));
			return n.force = n.normalizeForce(new O(t, e)),
			n.name = "Force",
			n
		}
		return c(a, G),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.force = this.normalizeForce(new O(t, e)),
						i && u(a.prototype.__proto__ || Object.getPrototypeOf(a.prototype), "reset", this).call(this, i, r)
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						t.a.add(this.force)
					}
				}
			]),
		a
	}
	(),
	Y = function (t) {
		function s(t, e, i, r, n) {
			o(this, s);
			var a = f(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this, r, n));
			return a.targetPosition = k.initValue(t, new O),
			a.radius = k.initValue(i, 1e3),
			a.force = k.initValue(a.normalizeValue(e), 100),
			a.radiusSq = a.radius * a.radius,
			a.attractionForce = new O,
			a.lengthSq = 0,
			a.name = "Attraction",
			a
		}
		return c(s, G),
		l(s, [{
					key: "reset",
					value: function (t, e, i, r, n) {
						this.targetPosition = k.initValue(t, new O),
						this.radius = k.initValue(i, 1e3),
						this.force = k.initValue(this.normalizeValue(e), 100),
						this.radiusSq = this.radius * this.radius,
						this.attractionForce = new O,
						this.lengthSq = 0,
						r && u(s.prototype.__proto__ || Object.getPrototypeOf(s.prototype), "reset", this).call(this, r, n)
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						this.attractionForce.copy(this.targetPosition),
						this.attractionForce.sub(t.p),
						this.lengthSq = this.attractionForce.lengthSq(),
						4e-6 < this.lengthSq && this.lengthSq < this.radiusSq && (this.attractionForce.normalize(), this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq), this.attractionForce.multiplyScalar(this.force), t.a.add(this.attractionForce))
					}
				}
			]),
		s
	}
	(),
	W = function (t) {
		function s(t, e, i, r, n) {
			o(this, s);
			var a = f(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this, r, n));
			return a.reset(t, e, i),
			a.time = 0,
			a.name = "RandomDrift",
			a
		}
		return c(s, G),
		l(s, [{
					key: "reset",
					value: function (t, e, i, r, n) {
						this.panFoce = new O(t, e),
						this.panFoce = this.normalizeForce(this.panFoce),
						this.delay = i,
						r && u(s.prototype.__proto__ || Object.getPrototypeOf(s.prototype), "reset", this).call(this, r, n)
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						this.time += e,
						this.time >= this.delay && (t.a.addXY(h.randomAToB(-this.panFoce.x, this.panFoce.x), h.randomAToB(-this.panFoce.y, this.panFoce.y)), this.time = 0)
					}
				}
			]),
		s
	}
	(),
	Z = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, 0, t, e, i));
			return r.name = "Gravity",
			r
		}
		return c(n, X),
		l(n, [{
					key: "reset",
					value: function (t, e, i) {
						u(n.prototype.__proto__ || Object.getPrototypeOf(n.prototype), "reset", this).call(this, 0, t, e, i)
					}
				}
			]),
		n
	}
	(),
	Q = function (t) {
		function s(t, e, i, r, n) {
			o(this, s);
			var a = f(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this, r, n));
			return a.reset(t, e, i),
			a.name = "Collision",
			a
		}
		return c(s, G),
		l(s, [{
					key: "reset",
					value: function (t, e, i, r, n) {
						this.emitter = k.initValue(t, null),
						this.mass = k.initValue(e, !0),
						this.callback = k.initValue(i, null),
						this.collisionPool = [],
						this.delta = new O,
						r && u(s.prototype.__proto__ || Object.getPrototypeOf(s.prototype), "reset", this).call(this, r, n)
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						var r = this.emitter ? this.emitter.particles.slice(i) : this.pool.slice(i),
						n = r.length,
						a = void 0,
						s = void 0,
						o = void 0,
						h = void 0,
						l = void 0,
						u = void 0,
						c = void 0;
						for (c = 0; c < n; c++)
							if ((a = r[c]) !== t) {
								this.delta.copy(a.p),
								this.delta.sub(t.p),
								s = this.delta.lengthSq();
								var f = t.radius + a.radius;
								s <= f * f && (o = f - Math.sqrt(s), o += .5, h = t.mass + a.mass, l = this.mass ? a.mass / h : .5, u = this.mass ? t.mass / h : .5, t.p.add(this.delta.clone().normalize().multiplyScalar(o * -l)), a.p.add(this.delta.normalize().multiplyScalar(o * u)), this.callback && this.callback(t, a))
							}
					}
				}
			]),
		s
	}
	(),
	K = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i, r));
			return n.reset(t, e),
			n.name = "CrossZone",
			n
		}
		return c(a, G),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.zone = t,
						this.zone.crossType = k.initValue(e, "dead"),
						i && u(a.prototype.__proto__ || Object.getPrototypeOf(a.prototype), "reset", this).call(this, i, r)
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						this.zone.crossing(t)
					}
				}
			]),
		a
	}
	(),
	J = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i, r));
			return n.reset(t, e),
			n.name = "Alpha",
			n
		}
		return c(a, G),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.same = null == e,
						this.a = k.setSpanValue(k.initValue(t, 1)),
						this.b = k.setSpanValue(e),
						i && u(a.prototype.__proto__ || Object.getPrototypeOf(a.prototype), "reset", this).call(this, i, r)
					}
				}, {
					key: "initialize",
					value: function (t) {
						t.transform.alphaA = this.a.getValue(),
						this.same ? t.transform.alphaB = t.transform.alphaA : t.transform.alphaB = this.b.getValue()
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						t.alpha = t.transform.alphaB + (t.transform.alphaA - t.transform.alphaB) * this.energy,
						t.alpha < .001 && (t.alpha = 0)
					}
				}
			]),
		a
	}
	(),
	$ = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i, r));
			return n.reset(t, e),
			n.name = "Scale",
			n
		}
		return c(a, G),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.same = null == e,
						this.a = k.setSpanValue(k.initValue(t, 1)),
						this.b = k.setSpanValue(e),
						i && u(a.prototype.__proto__ || Object.getPrototypeOf(a.prototype), "reset", this).call(this, i, r)
					}
				}, {
					key: "initialize",
					value: function (t) {
						t.transform.scaleA = this.a.getValue(),
						t.transform.oldRadius = t.radius,
						t.transform.scaleB = this.same ? t.transform.scaleA : this.b.getValue()
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						t.scale = t.transform.scaleB + (t.transform.scaleA - t.transform.scaleB) * this.energy,
						t.scale < 1e-4 && (t.scale = 0),
						t.radius = t.transform.oldRadius * t.scale
					}
				}
			]),
		a
	}
	(),
	tt = function (t) {
		function s(t, e, i, r, n) {
			o(this, s);
			var a = f(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this, r, n));
			return a.reset(t, e, i),
			a.name = "Rotate",
			a
		}
		return c(s, G),
		l(s, [{
					key: "reset",
					value: function (t, e, i, r, n) {
						this.same = null == e,
						this.a = k.setSpanValue(k.initValue(t, "Velocity")),
						this.b = k.setSpanValue(k.initValue(e, 0)),
						this.style = k.initValue(i, "to"),
						r && u(s.prototype.__proto__ || Object.getPrototypeOf(s.prototype), "reset", this).call(this, r, n)
					}
				}, {
					key: "initialize",
					value: function (t) {
						t.rotation = this.a.getValue(),
						t.transform.rotationA = this.a.getValue(),
						this.same || (t.transform.rotationB = this.b.getValue())
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.calculate(t, e, i),
						this.same ? "V" !== this.a.a && "Velocity" !== this.a.a && "v" !== this.a.a || (t.rotation = t.getDirection()) : "to" === this.style || "TO" === this.style || "_" === this.style ? t.rotation += t.transform.rotationB + (t.transform.rotationA - t.transform.rotationB) * this.energy : t.rotation += t.transform.rotationB
					}
				}
			]),
		s
	}
	(),
	et = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i, r));
			return n.reset(t, e),
			n.name = "Color",
			n
		}
		return c(a, G),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.a = D.createArraySpan(t),
						this.b = D.createArraySpan(e),
						i && u(a.prototype.__proto__ || Object.getPrototypeOf(a.prototype), "reset", this).call(this, i, r)
					}
				}, {
					key: "initialize",
					value: function (t) {
						t.color = this.a.getValue(),
						t.transform.colorA = S.hexToRGB(t.color),
						this.b && (t.transform.colorB = S.hexToRGB(this.b.getValue()))
					}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.b ? (this.calculate(t, e, i), t.transform.rgb.r = t.transform.colorB.r + (t.transform.colorA.r - t.transform.colorB.r) * this.energy, t.transform.rgb.g = t.transform.colorB.g + (t.transform.colorA.g - t.transform.colorB.g) * this.energy, t.transform.rgb.b = t.transform.colorB.b + (t.transform.colorA.b - t.transform.colorB.b) * this.energy, t.transform.rgb.r = Math.floor(t.transform.rgb.r), t.transform.rgb.g = Math.floor(t.transform.rgb.g), t.transform.rgb.b = Math.floor(t.transform.rgb.b)) : (t.transform.rgb.r = t.transform.colorA.r, t.transform.rgb.g = t.transform.colorA.g, t.transform.rgb.b = t.transform.colorA.b)
					}
				}
			]),
		a
	}
	(),
	it = function (t) {
		function s(t, e, i, r, n) {
			o(this, s);
			var a = f(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this, t, e, i, r, n));
			return a.force *= -1,
			a.name = "Repulsion",
			a
		}
		return c(s, Y),
		l(s, [{
					key: "reset",
					value: function (t, e, i, r, n) {
						u(s.prototype.__proto__ || Object.getPrototypeOf(s.prototype), "reset", this).call(this, t, e, i, r, n),
						this.force *= -1
					}
				}
			]),
		s
	}
	(),
	rt = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, i, r));
			return n.distanceVec = new O,
			n.centerPoint = k.initValue(t, new O),
			n.force = k.initValue(n.normalizeValue(e), 100),
			n.name = "GravityWell",
			n
		}
		return c(a, G),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.distanceVec = new O,
						this.centerPoint = k.initValue(t, new O),
						this.force = k.initValue(this.normalizeValue(e), 100),
						i && u(a.prototype.__proto__ || Object.getPrototypeOf(a.prototype), "reset", this).call(this, i, r)
					}
				}, {
					key: "initialize",
					value: function (t) {}
				}, {
					key: "applyBehaviour",
					value: function (t, e, i) {
						this.distanceVec.set(this.centerPoint.x - t.p.x, this.centerPoint.y - t.p.y);
						var r = this.distanceVec.lengthSq();
						if (0 !== r) {
							var n = this.distanceVec.length(),
							a = this.force * e / (r * n);
							t.v.x += a * this.distanceVec.x,
							t.v.y += a * this.distanceVec.y
						}
					}
				}
			]),
		a
	}
	(),
	nt = {
		initialize: function (t, e, i) {
			var r = i.length,
			n = void 0;
			for (n = 0; n < r; n++)
				i[n]instanceof M ? i[n].init(t, e) : this.init(t, e, i[n]);
			this.bindEmitter(t, e)
		},
		init: function (t, e, i) {
			k.setPrototypeByObject(e, i),
			k.setVector2DByObject(e, i)
		},
		bindEmitter: function (t, e) {
			t.bindEmitter && (e.p.add(t.p), e.v.add(t.v), e.a.add(t.a), e.v.rotate(h.degreeTransform(t.rotation)))
		}
	},
	at = function (t) {
		function i(t) {
			o(this, i);
			var e = f(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, t));
			return e.initializes = [],
			e.particles = [],
			e.behaviours = [],
			e.emitSpeed = 0,
			e.emitTime = 0,
			e.totalTime = -1,
			e.damping = .006,
			e.bindEmitter = !0,
			e.rate = new V(1, .1),
			e.id = "emitter_" + i.ID++,
			e.name = "Emitter",
			e
		}
		return c(i, C),
		l(i, [{
					key: "emit",
					value: function (t, e) {
						this.stoped = !1,
						this.emitTime = 0,
						this.totalTime = k.initValue(t, 1 / 0),
						!0 === e || "life" === e || "destroy" === e ? this.life = "once" === t ? 1 : this.totalTime : isNaN(e) || (this.life = e),
						this.rate.init()
					}
				}, {
					key: "stop",
					value: function () {
						this.totalTime = -1,
						this.emitTime = 0,
						this.stoped = !0
					}
				}, {
					key: "preEmit",
					value: function (t) {
						var e = this.stoped,
						i = this.emitTime,
						r = this.totalTime;
						this.stoped = !1,
						this.emitTime = 0,
						this.totalTime = t,
						this.rate.init();
						for (; .0167 < t; )
							t -= .0167, this.update(.0167);
						this.stoped = e,
						this.emitTime = i + Math.max(t, 0),
						this.totalTime = r
					}
				}, {
					key: "removeAllParticles",
					value: function () {
						for (var t = this.particles.length; t--; )
							this.particles[t].dead = !0
					}
				}, {
					key: "addSelfInitialize",
					value: function (t) {
						t.init ? t.init(this) : this.initAll()
					}
				}, {
					key: "addInitialize",
					value: function () {
						for (var t = arguments.length, e = Array(t), i = 0; i < t; i++)
							e[i] = arguments[i];
						for (var r = e.length; r--; )
							this.initializes.push(e[r])
					}
				}, {
					key: "removeInitialize",
					value: function (t) {
						var e = this.initializes.indexOf(t);
						-1 < e && this.initializes.splice(e, 1)
					}
				}, {
					key: "removeAllInitializers",
					value: function () {
						k.destroyArray(this.initializes)
					}
				}, {
					key: "addBehaviour",
					value: function () {
						for (var t = arguments.length, e = Array(t), i = 0; i < t; i++)
							e[i] = arguments[i];
						for (var r = arguments.length; r--; ) {
							var n = e[r];
							this.behaviours.push(n),
							n.parents && n.parents.push(this)
						}
					}
				}, {
					key: "removeBehaviour",
					value: function (t) {
						var e = this.behaviours.indexOf(t);
						return this.behaviours.splice(e, 1),
						t.parents && (e = t.parents.indexOf(t), t.parents.splice(e, 1)),
						e
					}
				}, {
					key: "removeAllBehaviours",
					value: function () {
						k.destroyArray(this.behaviours)
					}
				}, {
					key: "update",
					value: function (t) {
						this.age += t,
						(this.age >= this.life || this.dead) && this.destroy(),
						this.emitting(t),
						this.integrate(t)
					}
				}, {
					key: "integrate",
					value: function (t) {
						if (this.parent) {
							var e = 1 - this.damping;
							this.parent.integrator.calculate(this, t, e);
							var i = void 0,
							r = void 0;
							for (i = this.particles.length - 1; 0 <= i; i--)
								(r = this.particles[i]).update(t, i), this.parent.integrator.calculate(r, t, e), this.dispatch("PARTICLE_UPDATE", r), r.dead && (this.dispatch("PARTICLE_DEAD", r), this.parent.pool.expire(r), this.particles.splice(i, 1))
						}
					}
				}, {
					key: "dispatch",
					value: function (t, e) {
						this.parent && this.parent.dispatchEvent(t, e),
						this.bindEvent && this.dispatchEvent(t, e)
					}
				}, {
					key: "emitting",
					value: function (t) {
						if ("once" === this.totalTime) {
							var e = void 0,
							i = this.rate.getValue(99999);
							for (0 < i && (this.emitSpeed = i), e = 0; e < i; e++)
								this.createParticle();
							this.totalTime = "none"
						} else if (this.emitTime += t, this.emitTime < this.totalTime) {
							var r = this.rate.getValue(t),
							n = void 0;
							for (0 < r && (this.emitSpeed = r), n = 0; n < r; n++)
								this.createParticle()
						}
					}
				}, {
					key: "createParticle",
					value: function (t, e) {
						var i = this.parent.pool.get(C);
						return this.setupParticle(i, t, e),
						this.dispatch("PARTICLE_CREATED", i),
						i
					}
				}, {
					key: "setupParticle",
					value: function (t, e, i) {
						var r = this.initializes,
						n = this.behaviours;
						e && (r = k.isArray(e) ? e : [e]),
						i && (i = k.isArray(i) ? i : [i]),
						t.reset(),
						nt.initialize(this, t, r),
						t.addBehaviours(n),
						(t.parent = this).particles.push(t)
					}
				}, {
					key: "remove",
					value: function () {
						this.stop(),
						k.destroy(this.particles)
					}
				}, {
					key: "destroy",
					value: function (t) {
						this.dead = !0,
						this.remove(),
						this.removeAllInitializers(),
						this.removeAllBehaviours(),
						this.parent && this.parent.removeEmitter(this)
					}
				}
			]),
		i
	}
	();
	at.ID = 0,
	t.bind(at);
	var st = function (t) {
		function r(t) {
			o(this, r);
			var e = f(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, t));
			return e.selfBehaviours = [],
			e
		}
		return c(r, at),
		l(r, [{
					key: "addSelfBehaviour",
					value: function () {
						for (var t = arguments.length, e = Array(t), i = 0; i < t; i++)
							e[i] = arguments[i];
						var r = e.length,
						n = void 0;
						for (n = 0; n < r; n++)
							this.selfBehaviours.push(e[n])
					}
				}, {
					key: "removeSelfBehaviour",
					value: function (t) {
						var e = this.selfBehaviours.indexOf(t);
						-1 < e && this.selfBehaviours.splice(e, 1)
					}
				}, {
					key: "update",
					value: function (t) {
						if (u(r.prototype.__proto__ || Object.getPrototypeOf(r.prototype), "update", this).call(this, t), !this.sleep) {
							var e = this.selfBehaviours.length,
							i = void 0;
							for (i = 0; i < e; i++)
								this.selfBehaviours[i].applyBehaviour(this, t, i)
						}
					}
				}
			]),
		r
	}
	(),
	ot = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, i));
			return r.mouseTarget = k.initValue(t, window),
			r.ease = k.initValue(e, .7),
			r._allowEmitting = !1,
			r.initEventHandler(),
			r
		}
		return c(n, at),
		l(n, [{
					key: "initEventHandler",
					value: function () {
						var e = this;
						this.mousemoveHandler = function (t) {
							return e.mousemove.call(e, t)
						},
						this.mousedownHandler = function (t) {
							return e.mousedown.call(e, t)
						},
						this.mouseupHandler = function (t) {
							return e.mouseup.call(e, t)
						},
						this.mouseTarget.addEventListener("mousemove", this.mousemoveHandler, !1)
					}
				}, {
					key: "emit",
					value: function () {
						this._allowEmitting = !0
					}
				}, {
					key: "stop",
					value: function () {
						this._allowEmitting = !1
					}
				}, {
					key: "mousemove",
					value: function (t) {
						t.layerX || 0 === t.layerX ? (this.p.x += (t.layerX - this.p.x) * this.ease, this.p.y += (t.layerY - this.p.y) * this.ease) : (t.offsetX || 0 === t.offsetX) && (this.p.x += (t.offsetX - this.p.x) * this.ease, this.p.y += (t.offsetY - this.p.y) * this.ease),
						this._allowEmitting && u(n.prototype.__proto__ || Object.getPrototypeOf(n.prototype), "emit", this).call(this, "once")
					}
				}, {
					key: "destroy",
					value: function () {
						u(n.prototype.__proto__ || Object.getPrototypeOf(n.prototype), "destroy", this).call(this),
						this.mouseTarget.removeEventListener("mousemove", this.mousemoveHandler, !1)
					}
				}
			]),
		n
	}
	(),
	ht = function () {
		function i(t, e) {
			o(this, i),
			this.element = t,
			this.stroke = e,
			this.initHandler(),
			this.circleConf = {
				isCircle: !0
			},
			this.pool = new E,
			this.name = "BaseRenderer"
		}
		return l(i, [{
					key: "setStroke",
					value: function (t, e) {
						t = k.initValue(t, "#000000"),
						e = k.initValue(e, 1),
						this.stroke = {
							color: t,
							thinkness: e
						}
					}
				}, {
					key: "initHandler",
					value: function () {
						var e = this;
						this._protonUpdateHandler = function () {
							e.onProtonUpdate.call(e)
						},
						this._protonUpdateAfterHandler = function () {
							e.onProtonUpdateAfter.call(e)
						},
						this._emitterAddedHandler = function (t) {
							e.onEmitterAdded.call(e, t)
						},
						this._emitterRemovedHandler = function (t) {
							e.onEmitterRemoved.call(e, t)
						},
						this._particleCreatedHandler = function (t) {
							e.onParticleCreated.call(e, t)
						},
						this._particleUpdateHandler = function (t) {
							e.onParticleUpdate.call(e, t)
						},
						this._particleDeadHandler = function (t) {
							e.onParticleDead.call(e, t)
						}
					}
				}, {
					key: "init",
					value: function (t) {
						(this.parent = t).addEventListener("PROTON_UPDATE", this._protonUpdateHandler),
						t.addEventListener("PROTON_UPDATE_AFTER", this._protonUpdateAfterHandler),
						t.addEventListener("EMITTER_ADDED", this._emitterAddedHandler),
						t.addEventListener("EMITTER_REMOVED", this._emitterRemovedHandler),
						t.addEventListener("PARTICLE_CREATED", this._particleCreatedHandler),
						t.addEventListener("PARTICLE_UPDATE", this._particleUpdateHandler),
						t.addEventListener("PARTICLE_DEAD", this._particleDeadHandler)
					}
				}, {
					key: "resize",
					value: function (t, e) {}
				}, {
					key: "destroy",
					value: function () {
						this.remove()
					}
				}, {
					key: "remove",
					value: function (t) {
						this.parent.removeEventListener("PROTON_UPDATE", this._protonUpdateHandler),
						this.parent.removeEventListener("PROTON_UPDATE_AFTER", this._protonUpdateAfterHandler),
						this.parent.removeEventListener("EMITTER_ADDED", this._emitterAddedHandler),
						this.parent.removeEventListener("EMITTER_REMOVED", this._emitterRemovedHandler),
						this.parent.removeEventListener("PARTICLE_CREATED", this._particleCreatedHandler),
						this.parent.removeEventListener("PARTICLE_UPDATE", this._particleUpdateHandler),
						this.parent.removeEventListener("PARTICLE_DEAD", this._particleDeadHandler),
						this.parent = null
					}
				}, {
					key: "onProtonUpdate",
					value: function () {}
				}, {
					key: "onProtonUpdateAfter",
					value: function () {}
				}, {
					key: "onEmitterAdded",
					value: function (t) {}
				}, {
					key: "onEmitterRemoved",
					value: function (t) {}
				}, {
					key: "onParticleCreated",
					value: function (t) {}
				}, {
					key: "onParticleUpdate",
					value: function (t) {}
				}, {
					key: "onParticleDead",
					value: function (t) {}
				}
			]),
		i
	}
	(),
	lt = function (t) {
		function i(t) {
			o(this, i);
			var e = f(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, t));
			return e.stroke = null,
			e.context = e.element.getContext("2d"),
			e.bufferCache = {},
			e.name = "CanvasRenderer",
			e
		}
		return c(i, ht),
		l(i, [{
					key: "resize",
					value: function (t, e) {
						this.element.width = t,
						this.element.height = e
					}
				}, {
					key: "onProtonUpdate",
					value: function () {
						this.context.clearRect(0, 0, this.element.width, this.element.height)
					}
				}, {
					key: "onParticleCreated",
					value: function (t) {
						t.body ? _(t.body, this.addImg2Body, t) : t.color = t.color || "#ff0000"
					}
				}, {
					key: "onParticleUpdate",
					value: function (t) {
						t.body ? t.body instanceof Image && this.drawImage(t) : this.drawCircle(t)
					}
				}, {
					key: "onParticleDead",
					value: function (t) {
						t.body = null
					}
				}, {
					key: "addImg2Body",
					value: function (t, e) {
						e.body = t
					}
				}, {
					key: "drawImage",
					value: function (t) {
						var e = t.body.width * t.scale | 0,
						i = t.body.height * t.scale | 0,
						r = t.p.x - e / 2,
						n = t.p.y - i / 2;
						if (t.color) {
							t.transform.buffer || (t.transform.buffer = this.createBuffer(t.body));
							var a = t.transform.buffer.getContext("2d");
							a.clearRect(0, 0, t.transform.buffer.width, t.transform.buffer.height),
							a.globalAlpha = t.alpha,
							a.drawImage(t.body, 0, 0),
							a.globalCompositeOperation = "source-atop",
							a.fillStyle = S.rgbToHex(t.transform.rgb),
							a.fillRect(0, 0, t.transform.buffer.width, t.transform.buffer.height),
							a.globalCompositeOperation = "source-over",
							a.globalAlpha = 1,
							this.context.drawImage(t.transform.buffer, 0, 0, t.transform.buffer.width, t.transform.buffer.height, r, n, e, i)
						} else
							this.context.save(), this.context.globalAlpha = t.alpha, this.context.translate(t.p.x, t.p.y), this.context.rotate(h.degreeTransform(t.rotation)), this.context.translate(-t.p.x, -t.p.y), this.context.drawImage(t.body, 0, 0, t.body.width, t.body.height, r, n, e, i), this.context.globalAlpha = 1, this.context.restore()
					}
				}, {
					key: "drawCircle",
					value: function (t) {
						t.transform.rgb ? this.context.fillStyle = "rgba(" + t.transform.rgb.r + "," + t.transform.rgb.g + "," + t.transform.rgb.b + "," + t.alpha + ")" : this.context.fillStyle = t.color,
						this.context.beginPath(),
						this.context.arc(t.p.x, t.p.y, t.radius, 0, 2 * Math.PI, !0),
						this.stroke && (this.context.strokeStyle = this.stroke.color, this.context.lineWidth = this.stroke.thinkness, this.context.stroke()),
						this.context.closePath(),
						this.context.fill()
					}
				}, {
					key: "createBuffer",
					value: function (t) {
						if (t instanceof Image) {
							var e = t.width + "_" + t.height,
							i = this.bufferCache[e];
							return i || ((i = document.createElement("canvas")).width = t.width, i.height = t.height, this.bufferCache[e] = i),
							i
						}
					}
				}
			]),
		i
	}
	(),
	ut = function (t) {
		function e(t) {
			o(this, e);
			var i = f(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t));
			return i.stroke = null,
			i.pool.create = function (t, e) {
				return i.createBody(t, e)
			},
			i.addImg2Body = i.addImg2Body.bind(i),
			i.transform3d = !1,
			i.name = "DomRenderer",
			i
		}
		return c(e, ht),
		l(e, [{
					key: "onParticleCreated",
					value: function (t) {
						t.body ? _(t.body, this.addImg2Body, t) : (t.body = this.pool.get(this.circleConf, t), this.element.appendChild(t.body))
					}
				}, {
					key: "onParticleUpdate",
					value: function (t) {
						this.bodyReady(t) && (this.transform3d ? m.transform3d(t.body, t.p.x, t.p.y, t.scale, t.rotation) : m.transform(t.body, t.p.x, t.p.y, t.scale, t.rotation), t.body.style.opacity = t.alpha, t.body.isCircle && (t.body.style.backgroundColor = t.color || "#ff0000"))
					}
				}, {
					key: "onParticleDead",
					value: function (t) {
						this.bodyReady(t) && (this.element.removeChild(t.body), this.pool.expire(t.body), t.body = null)
					}
				}, {
					key: "bodyReady",
					value: function (t) {
						return "object" === r(t.body) && t.body && !t.body.isInner
					}
				}, {
					key: "addImg2Body",
					value: function (t, e) {
						e.dead || (e.body = this.pool.get(t, e), m.resize(e.body, t.width, t.height), this.element.appendChild(e.body))
					}
				}, {
					key: "createBody",
					value: function (t, e) {
						return t.isCircle ? this.createCircle(e) : this.createSprite(t, e)
					}
				}, {
					key: "createCircle",
					value: function (t) {
						var e = m.createDiv(t.id + "_dom", 2 * t.radius, 2 * t.radius);
						return e.style.borderRadius = t.radius + "px",
						this.stroke && (e.style.borderColor = this.stroke.color, e.style.borderWidth = this.stroke.thinkness + "px"),
						e.isCircle = !0,
						e
					}
				}, {
					key: "createSprite",
					value: function (t, e) {
						var i = "string" == typeof t ? t : t.src,
						r = m.createDiv(e.id + "_dom", t.width, t.height);
						return r.style.backgroundImage = "url(" + i + ")",
						r
					}
				}
			]),
		e
	}
	(),
	ct = function (t) {
		function r(t, e) {
			o(this, r);
			var i = f(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, t));
			return i.stroke = e,
			i.name = "EaselRenderer",
			i
		}
		return c(r, ht),
		l(r, [{
					key: "onParticleCreated",
					value: function (t) {
						t.body ? this.createSprite(t) : this.createCircle(t),
						this.element.addChild(t.body)
					}
				}, {
					key: "onParticleUpdate",
					value: function (t) {
						t.body && (t.body.x = t.p.x, t.body.y = t.p.y, t.body.alpha = t.alpha, t.body.scaleX = t.body.scaleY = t.scale, t.body.rotation = t.rotation)
					}
				}, {
					key: "onParticleDead",
					value: function (t) {
						t.body && (t.body.parent && t.body.parent.removeChild(t.body), this.pool.expire(t.body), t.body = null),
						t.graphics && this.pool.expire(t.graphics)
					}
				}, {
					key: "createSprite",
					value: function (t) {
						t.body = this.pool.get(t.body),
						t.body.parent || t.body.image && (t.body.regX = t.body.image.width / 2, t.body.regY = t.body.image.height / 2)
					}
				}, {
					key: "createCircle",
					value: function (t) {
						var e = this.pool.get(createjs.Graphics);
						this.stroke && (this.stroke instanceof String ? e.beginStroke(this.stroke) : e.beginStroke("#000000")),
						e.beginFill(t.color || "#ff0000").drawCircle(0, 0, t.radius);
						var i = this.pool.get(createjs.Shape, [e]);
						t.body = i,
						t.graphics = e
					}
				}
			]),
		r
	}
	(),
	ft = function (t) {
		function r(t, e) {
			o(this, r);
			var i = f(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, t));
			return i.context = i.element.getContext("2d"),
			i.imageData = null,
			i.rectangle = null,
			i.rectangle = e,
			i.createImageData(e),
			i.name = "PixelRenderer",
			i
		}
		return c(r, ht),
		l(r, [{
					key: "resize",
					value: function (t, e) {
						this.element.width = t,
						this.element.height = e
					}
				}, {
					key: "createImageData",
					value: function (t) {
						this.rectangle = t || new B(0, 0, this.element.width, this.element.height),
						this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height),
						this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y)
					}
				}, {
					key: "onProtonUpdate",
					value: function () {
						this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height),
						this.imageData = this.context.getImageData(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height)
					}
				}, {
					key: "onProtonUpdateAfter",
					value: function () {
						this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y)
					}
				}, {
					key: "onParticleCreated",
					value: function (t) {}
				}, {
					key: "onParticleUpdate",
					value: function (t) {
						this.imageData && this.setPixel(this.imageData, Math.floor(t.p.x - this.rectangle.x), Math.floor(t.p.y - this.rectangle.y), t)
					}
				}, {
					key: "setPixel",
					value: function (t, e, i, r) {
						var n = r.transform.rgb;
						if (!(e < 0 || e > this.element.width || i < 0 || i > this.elementwidth)) {
							var a = 4 * ((i >> 0) * t.width + (e >> 0));
							t.data[a] = n.r,
							t.data[a + 1] = n.g,
							t.data[a + 2] = n.b,
							t.data[a + 3] = 255 * r.alpha
						}
					}
				}, {
					key: "onParticleDead",
					value: function (t) {}
				}
			]),
		r
	}
	(),
	dt = function (t) {
		function r(t, e) {
			o(this, r);
			var i = f(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, t));
			return i.stroke = e,
			i.setColor = !1,
			i.pool.create = function (t, e) {
				return i.createBody(t, e)
			},
			i.name = "PixiRenderer",
			i
		}
		return c(r, ht),
		l(r, [{
					key: "onProtonUpdate",
					value: function () {}
				}, {
					key: "onParticleCreated",
					value: function (t) {
						t.body ? t.body = this.pool.get(t.body, t) : t.body = this.pool.get(this.circleConf, t),
						this.element.addChild(t.body)
					}
				}, {
					key: "onParticleUpdate",
					value: function (t) {
						this.transform(t, t.body),
						this.setColor && (t.body.tint = S.getHex16FromParticle(t))
					}
				}, {
					key: "onParticleDead",
					value: function (t) {
						this.element.removeChild(t.body),
						this.pool.expire(t.body),
						t.body = null
					}
				}, {
					key: "destroy",
					value: function (t) {
						u(r.prototype.__proto__ || Object.getPrototypeOf(r.prototype), "destroy", this).call(this),
						this.pool.destroy();
						for (var e = t.length; e--; ) {
							var i = t[e];
							i.body && this.element.removeChild(i.body)
						}
					}
				}, {
					key: "transform",
					value: function (t, e) {
						e.x = t.p.x,
						e.y = t.p.y,
						e.alpha = t.alpha,
						e.scale.x = t.scale,
						e.scale.y = t.scale,
						e.rotation = t.rotation * h.PI_180
					}
				}, {
					key: "createBody",
					value: function (t, e) {
						return t.isCircle ? this.createCircle(e) : this.createSprite(t)
					}
				}, {
					key: "createSprite",
					value: function (t) {
						var e = t.isInner ? PIXI.Sprite.fromImage(t.src) : new PIXI.Sprite(t);
						return e.anchor.x = .5,
						e.anchor.y = .5,
						e
					}
				}, {
					key: "createCircle",
					value: function (t) {
						var e = new PIXI.Graphics;
						if (this.stroke) {
							var i = this.stroke instanceof String ? this.stroke : 0;
							e.beginStroke(i)
						}
						return e.beginFill(t.color || 36077),
						e.drawCircle(0, 0, t.radius),
						e.endFill(),
						e
					}
				}
			]),
		r
	}
	(),
	yt = function () {
		function e() {
			o(this, e),
			this.mats = [];
			for (var t = this.size = 0; t < 20; t++)
				this.mats.push(I.create([0, 0, 0, 0, 0, 0, 0, 0, 0]))
		}
		return l(e, [{
					key: "set",
					value: function (t, e) {
						0 === e ? I.set(t, this.mats[0]) : I.multiply(this.mats[e - 1], t, this.mats[e]),
						this.size = Math.max(this.size, e + 1)
					}
				}, {
					key: "push",
					value: function (t) {
						0 === this.size ? I.set(t, this.mats[0]) : I.multiply(this.mats[this.size - 1], t, this.mats[this.size]),
						this.size++
					}
				}, {
					key: "pop",
					value: function () {
						0 < this.size && this.size--
					}
				}, {
					key: "top",
					value: function () {
						return this.mats[this.size - 1]
					}
				}
			]),
		e
	}
	(),
	pt = function (t) {
		function i(t) {
			o(this, i);
			var e = f(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, t));
			return e.gl = e.element.getContext("experimental-webgl", {
					antialias: !0,
					stencil: !1,
					depth: !1
				}),
			e.gl || alert("Sorry your browser do not suppest WebGL!"),
			e.initVar(),
			e.setMaxRadius(),
			e.initShaders(),
			e.initBuffers(),
			e.gl.blendEquation(e.gl.FUNC_ADD),
			e.gl.blendFunc(e.gl.SRC_ALPHA, e.gl.ONE_MINUS_SRC_ALPHA),
			e.gl.enable(e.gl.BLEND),
			e.addImg2Body = e.addImg2Body.bind(e),
			e.name = "WebGLRenderer",
			e
		}
		return c(i, ht),
		l(i, [{
					key: "init",
					value: function (t) {
						u(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "init", this).call(this, t),
						this.resize(this.element.width, this.element.height)
					}
				}, {
					key: "resize",
					value: function (t, e) {
						this.umat[4] = -2,
						this.umat[7] = 1,
						this.smat[0] = 1 / t,
						this.smat[4] = 1 / e,
						this.mstack.set(this.umat, 0),
						this.mstack.set(this.smat, 1),
						this.gl.viewport(0, 0, t, e),
						this.element.width = t,
						this.element.height = e
					}
				}, {
					key: "setMaxRadius",
					value: function (t) {
						this.circleCanvasURL = this.createCircle(t)
					}
				}, {
					key: "getVertexShader",
					value: function () {
						return ["uniform vec2 viewport;", "attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "uniform mat3 tMat;", "varying vec2 vTextureCoord;", "varying float alpha;", "void main() {", "vec3 v = tMat * vec3(aVertexPosition, 1.0);", "gl_Position = vec4(v.x, v.y, 0, 1);", "vTextureCoord = aTextureCoord;", "alpha = tMat[0][2];", "}"].join("\n")
					}
				}, {
					key: "getFragmentShader",
					value: function () {
						return ["precision mediump float;", "varying vec2 vTextureCoord;", "varying float alpha;", "uniform sampler2D uSampler;", "uniform vec4 color;", "uniform bool useTexture;", "uniform vec3 uColor;", "void main() {", "vec4 textureColor = texture2D(uSampler, vTextureCoord);", "gl_FragColor = textureColor * vec4(uColor, 1.0);", "gl_FragColor.w *= alpha;", "}"].join("\n")
					}
				}, {
					key: "initVar",
					value: function () {
						this.mstack = new yt,
						this.umat = I.create([2, 0, 1, 0, -2, 0, -1, 1, 1]),
						this.smat = I.create([.01, 0, 1, 0, .01, 0, 0, 0, 1]),
						this.texturebuffers = {}
					}
				}, {
					key: "blendEquation",
					value: function (t) {
						this.gl.blendEquation(this.gl[t])
					}
				}, {
					key: "blendFunc",
					value: function (t, e) {
						this.gl.blendFunc(this.gl[t], this.gl[e])
					}
				}, {
					key: "getShader",
					value: function (t, e, i) {
						var r = i ? t.createShader(t.FRAGMENT_SHADER) : t.createShader(t.VERTEX_SHADER);
						return t.shaderSource(r, e),
						t.compileShader(r),
						t.getShaderParameter(r, t.COMPILE_STATUS) ? r : (alert(t.getShaderInfoLog(r)), null)
					}
				}, {
					key: "initShaders",
					value: function () {
						var t = this.getShader(this.gl, this.getFragmentShader(), !0),
						e = this.getShader(this.gl, this.getVertexShader(), !1);
						this.sprogram = this.gl.createProgram(),
						this.gl.attachShader(this.sprogram, e),
						this.gl.attachShader(this.sprogram, t),
						this.gl.linkProgram(this.sprogram),
						this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS) || alert("Could not initialise shaders"),
						this.gl.useProgram(this.sprogram),
						this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, "aVertexPosition"),
						this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, "aTextureCoord"),
						this.gl.enableVertexAttribArray(this.sprogram.tca),
						this.gl.enableVertexAttribArray(this.sprogram.vpa),
						this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, "tMat"),
						this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, "uSampler"),
						this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, "useTexture"),
						this.sprogram.color = this.gl.getUniformLocation(this.sprogram, "uColor"),
						this.gl.uniform1i(this.sprogram.useTex, 1)
					}
				}, {
					key: "initBuffers",
					value: function () {
						var t = void 0;
						this.unitIBuffer = this.gl.createBuffer(),
						this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer),
						this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 3, 1, 0, 2, 3]), this.gl.STATIC_DRAW);
						var e = void 0,
						i = [];
						for (e = 0; e < 100; e++)
							i.push(e);
						for (t = new Uint16Array(i), this.unitI33 = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, t, this.gl.STATIC_DRAW), i = [], e = 0; e < 100; e++)
							i.push(e, e + 1, e + 2);
						t = new Uint16Array(i),
						this.stripBuffer = this.gl.createBuffer(),
						this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer),
						this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, t, this.gl.STATIC_DRAW)
					}
				}, {
					key: "createCircle",
					value: function (t) {
						this.circleCanvasRadius = d(k.initValue(t, 32));
						var e = m.createCanvas("circle_canvas", 2 * this.circleCanvasRadius, 2 * this.circleCanvasRadius),
						i = e.getContext("2d");
						return i.beginPath(),
						i.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, 2 * Math.PI, !0),
						i.closePath(),
						i.fillStyle = "#FFF",
						i.fill(),
						e.toDataURL()
					}
				}, {
					key: "drawImg2Canvas",
					value: function (t) {
						var e = t.body.width,
						i = t.body.height,
						r = d(t.body.width),
						n = d(t.body.height),
						a = t.body.width / r,
						s = t.body.height / n;
						this.texturebuffers[t.transform.src] || (this.texturebuffers[t.transform.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()]),
						t.transform.texture = this.texturebuffers[t.transform.src][0],
						t.transform.vcBuffer = this.texturebuffers[t.transform.src][1],
						t.transform.tcBuffer = this.texturebuffers[t.transform.src][2],
						this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.transform.tcBuffer),
						this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0, 0, a, 0, 0, s, s, s]), this.gl.STATIC_DRAW),
						this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.transform.vcBuffer),
						this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0, 0, e, 0, 0, i, e, i]), this.gl.STATIC_DRAW);
						var o = t.transform.canvas.getContext("2d").getImageData(0, 0, r, n);
						this.gl.bindTexture(this.gl.TEXTURE_2D, t.transform.texture),
						this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, o),
						this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR),
						this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST),
						this.gl.generateMipmap(this.gl.TEXTURE_2D),
						t.transform.textureLoaded = !0,
						t.transform.textureWidth = e,
						t.transform.textureHeight = i
					}
				}, {
					key: "onProtonUpdate",
					value: function () {}
				}, {
					key: "onParticleCreated",
					value: function (t) {
						t.transform.textureLoaded = !1,
						t.transform.tmat = I.create(),
						t.transform.tmat[8] = 1,
						t.transform.imat = I.create(),
						t.transform.imat[8] = 1,
						t.body ? _(t.body, this.addImg2Body, t) : (_(this.circleCanvasURL, this.addImg2Body, t), t.transform.oldScale = t.radius / this.circleCanvasRadius)
					}
				}, {
					key: "addImg2Body",
					value: function (t, e) {
						e.dead || (e.body = t, e.transform.src = t.src, e.transform.canvas = x(t), e.transform.oldScale = 1, this.drawImg2Canvas(e))
					}
				}, {
					key: "onParticleUpdate",
					value: function (t) {
						t.transform.textureLoaded && (this.updateMatrix(t), this.gl.uniform3f(this.sprogram.color, t.transform.rgb.r / 255, t.transform.rgb.g / 255, t.transform.rgb.b / 255), this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, !1, this.mstack.top()), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.transform.vcBuffer), this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.transform.tcBuffer), this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindTexture(this.gl.TEXTURE_2D, t.transform.texture), this.gl.uniform1i(this.sprogram.samplerUniform, 0), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer), this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0), this.mstack.pop())
					}
				}, {
					key: "onParticleDead",
					value: function (t) {}
				}, {
					key: "updateMatrix",
					value: function (t) {
						var e = y(-t.transform.textureWidth / 2, -t.transform.textureHeight / 2),
						i = y(t.p.x, t.p.y),
						r = t.rotation * h.PI_180,
						n = p(r),
						a = t.scale * t.transform.oldScale,
						s = v(a, a),
						o = g(e, s);
						o = g(o, n),
						o = g(o, i),
						I.inverse(o, t.transform.imat),
						o[2] = t.alpha,
						this.mstack.push(o)
					}
				}
			]),
		i
	}
	(),
	vt = function (t) {
		function i(t) {
			o(this, i);
			var e = f(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, t));
			return e.name = "CustomRenderer",
			e
		}
		return c(i, ht),
		i
	}
	(),
	gt = function (t) {
		function s(t, e, i, r, n) {
			o(this, s);
			var a = f(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this));
			return 0 <= i - t ? (a.x1 = t, a.y1 = e, a.x2 = i, a.y2 = r) : (a.x1 = i, a.y1 = r, a.x2 = t, a.y2 = e),
			a.dx = a.x2 - a.x1,
			a.dy = a.y2 - a.y1,
			a.minx = Math.min(a.x1, a.x2),
			a.miny = Math.min(a.y1, a.y2),
			a.maxx = Math.max(a.x1, a.x2),
			a.maxy = Math.max(a.y1, a.y2),
			a.dot = a.x2 * a.y1 - a.x1 * a.y2,
			a.xxyy = a.dx * a.dx + a.dy * a.dy,
			a.gradient = a.getGradient(),
			a.length = a.getLength(),
			a.direction = k.initValue(n, ">"),
			a
		}
		return c(s, U),
		l(s, [{
					key: "getPosition",
					value: function () {
						return this.random = Math.random(),
						this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient),
						this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient),
						this.vector
					}
				}, {
					key: "getDirection",
					value: function (t, e) {
						var i = this.dy,
						r = -this.dx;
						return 0 < (i * t + r * e + this.dot) * (0 === r ? 1 : r)
					}
				}, {
					key: "getDistance",
					value: function (t, e) {
						return (this.dy * t + -this.dx * e + this.dot) / Math.sqrt(this.xxyy)
					}
				}, {
					key: "getSymmetric",
					value: function (t) {
						var e = t.getGradient(),
						i = 2 * (this.getGradient() - e),
						r = t.x,
						n = t.y;
						return t.x = r * Math.cos(i) - n * Math.sin(i),
						t.y = r * Math.sin(i) + n * Math.cos(i),
						t
					}
				}, {
					key: "getGradient",
					value: function () {
						return Math.atan2(this.dy, this.dx)
					}
				}, {
					key: "rangeOut",
					value: function (t) {
						if (Math.abs(this.getGradient()) <= h.PI / 4) {
							if (t.p.x <= this.maxx && t.p.x >= this.minx)
								return !0
						} else if (t.p.y <= this.maxy && t.p.y >= this.miny)
							return !0;
						return !1
					}
				}, {
					key: "getLength",
					value: function () {
						return Math.sqrt(this.dx * this.dx + this.dy * this.dy)
					}
				}, {
					key: "crossing",
					value: function (t) {
						if ("dead" === this.crossType)
							if (">" === this.direction || "R" === this.direction || "right" === this.direction || "down" === this.direction) {
								if (!this.rangeOut(t))
									return;
								this.getDirection(t.p.x, t.p.y) && (t.dead = !0)
							} else {
								if (!this.rangeOut(t))
									return;
								this.getDirection(t.p.x, t.p.y) || (t.dead = !0)
							}
						else if ("bound" === this.crossType) {
							if (!this.rangeOut(t))
								return;
							this.getDistance(t.p.x, t.p.y) <= t.radius && (0 === this.dx ? t.v.x *= -1 : 0 === this.dy ? t.v.y *= -1 : this.getSymmetric(t.v))
						} else
							"cross" === this.crossType && this.alert && (console.error("Sorry lineZone does not support cross method"), this.alert = !1)
					}
				}
			]),
		s
	}
	(),
	mt = function (t) {
		function n(t, e, i) {
			o(this, n);
			var r = f(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
			return r.x = t,
			r.y = e,
			r.radius = i,
			r.angle = 0,
			r.center = {
				x: t,
				y: e
			},
			r
		}
		return c(n, U),
		l(n, [{
					key: "getPosition",
					value: function () {
						return this.random = Math.random(),
						this.angle = h.PIx2 * Math.random(),
						this.vector.x = this.x + this.random * this.radius * Math.cos(this.angle),
						this.vector.y = this.y + this.random * this.radius * Math.sin(this.angle),
						this.vector
					}
				}, {
					key: "setCenter",
					value: function (t, e) {
						this.center.x = t,
						this.center.y = e
					}
				}, {
					key: "crossing",
					value: function (t) {
						var e = t.p.distanceTo(this.center);
						"dead" === this.crossType ? e - t.radius > this.radius && (t.dead = !0) : "bound" === this.crossType ? e + t.radius >= this.radius && this.getSymmetric(t) : "cross" === this.crossType && this.alert && (alert("Sorry CircleZone does not support cross method"), this.alert = !1)
					}
				}, {
					key: "getSymmetric",
					value: function (t) {
						var e = t.v.getGradient(),
						i = 2 * (this.getGradient(t) - e),
						r = t.v.x,
						n = t.v.y;
						t.v.x = r * Math.cos(i) - n * Math.sin(i),
						t.v.y = r * Math.sin(i) + n * Math.cos(i)
					}
				}, {
					key: "getGradient",
					value: function (t) {
						return -h.PI_2 + Math.atan2(t.p.y - this.center.y, t.p.x - this.center.x)
					}
				}
			]),
		n
	}
	(),
	bt = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this));
			return n.x = t,
			n.y = e,
			n.width = i,
			n.height = r,
			n
		}
		return c(a, U),
		l(a, [{
					key: "getPosition",
					value: function () {
						return this.vector.x = this.x + Math.random() * this.width,
						this.vector.y = this.y + Math.random() * this.height,
						this.vector
					}
				}, {
					key: "crossing",
					value: function (t) {
						"dead" === this.crossType ? (t.p.x + t.radius < this.x ? t.dead = !0 : t.p.x - t.radius > this.x + this.width && (t.dead = !0), t.p.y + t.radius < this.y ? t.dead = !0 : t.p.y - t.radius > this.y + this.height && (t.dead = !0)) : "bound" === this.crossType ? (t.p.x - t.radius < this.x ? (t.p.x = this.x + t.radius, t.v.x *= -1) : t.p.x + t.radius > this.x + this.width && (t.p.x = this.x + this.width - t.radius, t.v.x *= -1), t.p.y - t.radius < this.y ? (t.p.y = this.y + t.radius, t.v.y *= -1) : t.p.y + t.radius > this.y + this.height && (t.p.y = this.y + this.height - t.radius, t.v.y *= -1)) : "cross" === this.crossType && (t.p.x + t.radius < this.x && t.v.x <= 0 ? t.p.x = this.x + this.width + t.radius : t.p.x - t.radius > this.x + this.width && 0 <= t.v.x && (t.p.x = this.x - t.radius), t.p.y + t.radius < this.y && t.v.y <= 0 ? t.p.y = this.y + this.height + t.radius : t.p.y - t.radius > this.y + this.height && 0 <= t.v.y && (t.p.y = this.y - t.radius))
					}
				}
			]),
		a
	}
	(),
	_t = function (t) {
		function a(t, e, i, r) {
			o(this, a);
			var n = f(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this));
			return n.reset(t, e, i, r),
			n
		}
		return c(a, U),
		l(a, [{
					key: "reset",
					value: function (t, e, i, r) {
						this.imageData = t,
						this.x = k.initValue(e, 0),
						this.y = k.initValue(i, 0),
						this.d = k.initValue(r, 2),
						this.vectors = [],
						this.setVectors()
					}
				}, {
					key: "setVectors",
					value: function () {
						var t = void 0,
						e = void 0,
						i = this.imageData.width,
						r = this.imageData.height;
						for (t = 0; t < i; t += this.d)
							for (e = 0; e < r; e += this.d) {
								var n = 4 * ((e >> 0) * i + (t >> 0));
								0 < this.imageData.data[n + 3] && this.vectors.push({
									x: t + this.x,
									y: e + this.y
								})
							}
						return this.vector
					}
				}, {
					key: "getBound",
					value: function (t, e) {
						var i = 4 * ((e >> 0) * this.imageData.width + (t >> 0));
						return 0 < this.imageData.data[i + 3]
					}
				}, {
					key: "getPosition",
					value: function () {
						return this.vector.copy(this.vectors[Math.floor(Math.random() * this.vectors.length)])
					}
				}, {
					key: "getColor",
					value: function (t, e) {
						t -= this.x;
						var i = 4 * (((e -= this.y) >> 0) * this.imageData.width + (t >> 0));
						return {
							r: this.imageData.data[i],
							g: this.imageData.data[i + 1],
							b: this.imageData.data[i + 2],
							a: this.imageData.data[i + 3]
						}
					}
				}, {
					key: "crossing",
					value: function (t) {
						"dead" === this.crossType ? this.getBound(t.p.x - this.x, t.p.y - this.y) ? t.dead = !0 : t.dead = !1 : "bound" === this.crossType && (this.getBound(t.p.x - this.x, t.p.y - this.y) || t.v.negate())
					}
				}
			]),
		a
	}
	(),
	xt = {
		addEventListener: function (t, e) {
			t.addEventListener("PROTON_UPDATE_AFTER", function () {
				return e()
			})
		},
		getStyle: function (t) {
			var e = S.hexToRGB(t || "#ff0000");
			return "rgba(" + e.r + ", " + e.g + ", " + e.b + ", 0.5)"
		},
		drawZone: function (t, e, i, r) {
			var n = e.getContext("2d"),
			a = this.getStyle();
			this.addEventListener(t, function () {
				r && n.clearRect(0, 0, e.width, e.height),
				i instanceof F ? (n.beginPath(), n.fillStyle = a, n.arc(i.x, i.y, 10, 0, 2 * Math.PI, !0), n.fill(), n.closePath()) : i instanceof gt ? (n.beginPath(), n.strokeStyle = a, n.moveTo(i.x1, i.y1), n.lineTo(i.x2, i.y2), n.stroke(), n.closePath()) : i instanceof bt ? (n.beginPath(), n.strokeStyle = a, n.drawRect(i.x, i.y, i.width, i.height), n.stroke(), n.closePath()) : i instanceof mt && (n.beginPath(), n.strokeStyle = a, n.arc(i.x, i.y, i.radius, 0, 2 * Math.PI, !0), n.stroke(), n.closePath())
			})
		},
		drawEmitter: function (t, e, i, r) {
			var n = e.getContext("2d"),
			a = this.getStyle();
			this.addEventListener(t, function () {
				r && n.clearRect(0, 0, e.width, e.height),
				n.beginPath(),
				n.fillStyle = a,
				n.arc(i.p.x, i.p.y, 10, 0, 2 * Math.PI, !0),
				n.fill(),
				n.closePath()
			})
		}
	};
	return function () {
		for (var a = 0, t = ["ms", "moz", "webkit", "o"], e = 0; e < t.length && !window.requestAnimationFrame; ++e)
			window.requestAnimationFrame = window[t[e] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[t[e] + "CancelAnimationFrame"] || window[t[e] + "CancelRequestAnimationFrame"];
		window.requestAnimationFrame || (window.requestAnimationFrame = function (t, e) {
			var i = (new Date).getTime(),
			r = Math.max(0, 16 - (i - a)),
			n = window.setTimeout(function () {
					t(i + r)
				}, r);
			return a = i + r,
			n
		}),
		window.cancelAnimationFrame || (window.cancelAnimationFrame = function (t) {
			clearTimeout(t)
		})
	}
	(),
	R.Particle = R.P = C,
	R.Pool = E,
	R.Util = k,
	R.ColorUtil = S,
	R.MathUtils = h,
	R.Vector2D = R.Vector = O,
	R.Polar2D = R.Polar = i,
	R.ArraySpan = D,
	R.Rectangle = B,
	R.Rate = V,
	R.ease = w,
	R.Span = n,
	R.Mat3 = I,
	R.getSpan = function (t, e, i) {
		return new n(t, e, i)
	},
	R.createArraySpan = D.createArraySpan,
	R.Initialize = R.Init = M,
	R.Life = R.L = L,
	R.Position = R.P = z,
	R.Velocity = R.V = j,
	R.Mass = R.M = H,
	R.Radius = R.R = N,
	R.Body = R.B = q,
	R.Behaviour = G,
	R.Force = R.F = X,
	R.Attraction = R.A = Y,
	R.RandomDrift = R.RD = W,
	R.Gravity = R.G = Z,
	R.Collision = Q,
	R.CrossZone = K,
	R.Alpha = R.A = J,
	R.Scale = R.S = $,
	R.Rotate = tt,
	R.Color = et,
	R.Repulsion = it,
	R.GravityWell = rt,
	R.Emitter = at,
	R.BehaviourEmitter = st,
	R.FollowEmitter = ot,
	R.Zone = U,
	R.LineZone = gt,
	R.CircleZone = mt,
	R.PointZone = F,
	R.RectZone = bt,
	R.ImageZone = _t,
	R.CanvasRenderer = lt,
	R.DomRenderer = ut,
	R.EaselRenderer = ct,
	R.PixiRenderer = dt,
	R.PixelRenderer = ft,
	R.WebGLRenderer = R.WebGlRenderer = pt,
	R.CustomRenderer = vt,
	R.Debug = xt,
	Object.assign(R, w),
	R
});
//# sourceMappingURL=proton.min.js.map
